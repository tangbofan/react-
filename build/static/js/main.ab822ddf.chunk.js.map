{"version":3,"sources":["pages/Input.js","pages/List.js","pages/TodoList.js","index.js"],"names":["Input","htmlFor","ref","this","props","refs","value","type","onChange","onClick","addTodo","Component","List","renderTodos","style","color","TodoList","handleChange","f","setState","inpValue","target","state","todos","title","done","delTodo","idx","filter","item","index","toggle","newTodos","JSON","parse","stringify","map","todo","checked","dangerouslySetInnerHTML","__html","localStorage","setItem","inp","input","React","ReactDOM","render","document","getElementById"],"mappings":"qLAuBeA,E,uKAjBP,OAEI,6BACI,2BAAOC,QAAQ,OAAf,YACA,2BACQC,IAAKC,KAAKC,MAAMC,KAChBC,MAAOH,KAAKC,MAAME,MAClBC,KAAK,OACLC,SAAUL,KAAKC,MAAMI,WAE7B,4BAAQC,QAASN,KAAKC,MAAMM,SAA5B,qB,GAbIC,aCoBLC,E,uKAhBT,OACE,6BACE,wDACA,4BACKT,KAAKC,MAAMS,aAAY,IAE5B,wDACA,wBAAIC,MAAO,CAACC,MAAM,OAAQF,YAAaV,KAAKC,MAAMS,aAC7CV,KAAKC,MAAMS,aAAY,S,GAXnBF,aC4FJK,E,kDA1FX,aAAc,IAAD,8BACT,gBAMJC,aAAe,SAACC,GACZ,EAAKC,SAAS,CAACC,SAASF,EAAEG,OAAOf,SARxB,EAgBbI,QAAU,WACkB,IAArB,EAAKY,MAAMF,UAGd,EAAKD,SAAS,CACVI,MAAM,CACF,CACIC,MAAO,EAAKF,MAAMF,SAClBK,MAAM,IAHT,mBAKE,EAAKH,MAAMC,WA1Bb,EA+BbG,QAAU,SAACC,GAIP,EAAKR,SAAS,CACVI,MAAO,EAAKD,MAAMC,MAAMK,QAAO,SAACC,EAAKC,GAAN,OAAcA,GAAOH,QApC/C,EAgDbI,OAAS,SAACD,GACN,IAAIE,EAAWC,KAAKC,MAAMD,KAAKE,UAAU,EAAKb,MAAMC,QACpDS,EAASF,GAAOL,MAAQO,EAASF,GAAOL,KACxC,EAAKN,SAAS,CACVI,MAAOS,KApDF,EAuDbnB,YAAc,SAACY,GACX,OAAO,EAAKH,MAAMC,MAAMa,KAAI,SAACC,EAAKV,GAC9B,GAAGF,GAAMY,EAAKZ,KACV,OAAO,4BACH,2BACIhB,QAAS,kBAAI,EAAKsB,OAAOJ,IACzBW,QAASb,EACTlB,KAAK,aAET,0BAAMgC,wBAAyB,CAACC,OAAOH,EAAKb,SAC5C,4BACIf,QAAS,kBAAI,EAAKiB,QAAQC,KAD9B,qBA/DZ,EAAKL,MAAQ,CACTF,SAAU,GACVG,MAAM,IAJD,E,iEAWTkB,aAAaC,QACT,QACAT,KAAKE,UAAUhC,KAAKmB,MAAMC,U,+BA6DxB,IAAD,SACoBpB,KAAKmB,MADzB,EACEC,MADF,EACQH,SACb,OACI,6BACI,kBAAC,EAAD,CAAOV,QAASP,KAAKO,QACdJ,MAAOH,KAAKmB,MAAMF,SAClBZ,SAAUL,KAAKc,aACfZ,KAAM,SAAAsC,GAAG,OAAE,EAAKC,MAAMD,KAC7B,kBAAC,EAAD,CAAOjB,QAASvB,KAAKuB,QACdK,OAAQ5B,KAAK4B,OACblB,YAAaV,KAAKU,mB,GArFlBgC,IAAMlC,WC6K7BmC,IAASC,OACL,6BACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,U","file":"static/js/main.ab822ddf.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport TodoList from './TodoList';\r\n\r\nclass Input extends Component {\r\n \r\n    render(){\r\n        return (\r\n        \r\n            <div>\r\n                <label htmlFor=\"inp\">todolist</label>\r\n                <input \r\n                        ref={this.props.refs}\r\n                        value={this.props.value}\r\n                        type=\"text\" \r\n                        onChange={this.props.onChange}\r\n                    />\r\n                <button onClick={this.props.addTodo}>添加</button>\r\n            </div>\r\n        )\r\n    }  \r\n    \r\n}\r\n\r\nexport default Input\r\n","import React, { Component } from 'react'\r\nimport TodoList from '../pages/TodoList'\r\nimport Input from '../pages/Input';\r\n\r\nclass List extends Component{\r\n \r\n    render(){\r\n      return(\r\n        <div>\r\n          <h2>正在进行</h2>\r\n          <ul >\r\n              {this.props.renderTodos(false)}\r\n          </ul>\r\n          <h2>已经完成</h2>\r\n          <ul style={{color:'red'}} renderTodos={this.props.renderTodos}>\r\n              {this.props.renderTodos(true)}\r\n          </ul>\r\n        </div>\r\n    ) \r\n  }\r\n}\r\n\r\n\r\nexport default List\r\n","import React, { Component } from 'react';\r\nimport List from './List'\r\nimport Input from './Input'\r\n\r\n\r\nclass TodoList extends React.Component{ \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue: '',\r\n            todos:[]\r\n        }\r\n    }\r\n    handleChange = (f)=>{\r\n        this.setState({inpValue:f.target.value})\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n    }\r\n    addTodo = ()=>{\r\n        if(this.state.inpValue==\"\"){\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos: [\r\n                {\r\n                    title: this.state.inpValue,\r\n                    done: false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n        // this.setState({inpValue});\r\n    }\r\n    delTodo = (idx)=>{\r\n        // let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        // newTodos.splice(idx,1);\r\n        // this.setState({todos:newTodos});\r\n        this.setState({\r\n            todos: this.state.todos.filter((item,index)=>index!=idx)\r\n        });\r\n        // setState 是异步执行的，注意callback的用法\r\n        // this.setState({\r\n        //     todos: this.state.todos.filter((item,index)=>index!=idx)\r\n        // },()=>{\r\n        //     localStorage.setItem(\r\n        //         'todos',\r\n        //         JSON.stringify(this.state.todos)\r\n        //     )\r\n        // });\r\n    }\r\n    toggle = (index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos: newTodos\r\n        })\r\n    }\r\n    renderTodos = (done)=>{\r\n        return this.state.todos.map((todo,idx)=>{\r\n            if(done==todo.done){\r\n                return <li>\r\n                    <input \r\n                        onClick={()=>this.toggle(idx)}\r\n                        checked={done} \r\n                        type=\"checkbox\"\r\n                    />\r\n                    <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                    <button \r\n                        onClick={()=>this.delTodo(idx)}\r\n                    >\r\n                        删除\r\n                    </button>\r\n                </li>\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const {todos,inpValue} = this.state;\r\n        return(\r\n            <div>\r\n                <Input addTodo={this.addTodo} \r\n                       value={this.state.inpValue} \r\n                       onChange={this.handleChange} \r\n                       refs={inp=>this.input=inp} />\r\n                <List  delTodo={this.delTodo} \r\n                       toggle={this.toggle} \r\n                       renderTodos={this.renderTodos} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList;\r\n","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import $ from 'jquery';\n// import Buttons from './components/Buttons';\n// // alt shift + 上下键   复制一行\n// // alt + 上下键         移动一行\n// // 按住alt ，鼠标点击\n// // Ctrl + shift + 左右键，选中整个单词\n// // ctrl+shift+L\n// const List=(props)=>{\n//   return<ul>\n//     {\n//       props.data.map((item)=><li key={item.id}>{item.title}</li>)\n//     }\n//   </ul>\n// }\n// // const Buttons=()=>{\n// //   const btns=[1,2,3,4,5];\n// //   const handleClick=(num)=>{\n// //     //num 事件对象\n// //     console.log(num);\n// //   }\n// //   return <div>\n// //     {\n// //       btns.map((item)=><button key={item} onClick={()=>handleClick(item)}>{item}</button>)\n// //     }\n// //   </div>\n// // }\n// class Home extends React.Component{\n//   constructor(){\n//     super();\n//     this.state={\n//       // data:[1,2,3]\n//       data:[]\n//     }\n//     // console.log(this.props);\n//     // setTimeout(() => {\n//     //   this.setState({data:[5,6,7,8,9,]})\n//     // }, 2000);\n//     // fetch('https://cnodejs.org/api/v1/topics').then(res=>res.json()).then(data=>{\n//     //   // console.log(data);\n//     //   this.setState({data:data.data})\n//       //({data})=>{this.setState({data})}\n//     // })\n//   }\n//   getData=(page)=>{\n//     fetch('https://cnodejs.org/api/v1/topics?page='+page).then(res=>res.json()).then(data=>{\n//       // console.log(data);\n//       this.setState({data:data.data})\n//       //({data})=>{this.setState({data})}\n//     })\n//   }\n//   render(){\n//     const {data}=this.state;\n//     const btns=[1,2,3,4,5];\n//     return <div>\n//       <Buttons />\n//       <List data={data}/>\n//     </div>\n//     // <ul>\n//     //   {\n//     //     // this.state.data.map(\n//     //     // (item)=><li>{item.title}</li>)\n\n//     //   }\n//     // </ul>\n    \n//     //data.map((item)=><li>{item.title}</li>)\n//   }\n// }\n// // console.log($);\n// //  import App from './App';\n// // let ele=<h1>hello react</h1>;\n// // console.log(ele);\n// //函数组件\n// //UI组件\n// // function App(props){\n// //   const{title,id}=props;\n// //   return <div>\n// //     <div>{title}</div>\n// //     <div>{id}</div>\n// //   </div>\n// // }\n// // //智能组件\n// // class Demo extends React.Component{\n// //   render(){\n// //     return <div>\n// //       <div>name:{this.state.name}</div>\n// //       <App title={this.state.name} id='App'/>\n// //     </div>\n// //   }\n// //   constructor(){\n// //     super();\n// //     //声明状态\n// //     this.state={\n// //       name:'tom'\n// //     }\n// //     setTimeout(()=>{\n// //       this.setState({name:'jerry'})\n// //     },3000)\n// //   }\n// // }\n// // let ele=<h1 id=\"title\" className='tit'>\n// //   <div>当前时间</div>\n// //   {new Date().toLocaleString()}\n// // </h1>;\n// // let ele=React.createElement(\n// //   'h1',\n// //   {id:'title'},\n// //   'hello react'\n// // );\n// // console.log(ele);\n// // let ReactDOM={\n// //   render(eleObj,container){\n// //     //解构\n// //     const{type,props}=eleObj;\n// //     //创建第一层节点\n// //     let ele=document.createElement(type);\n// //     //遍历属性对象，将属性添加到第一层节点对象上\n// //     for (const prop in props) {\n// //       if (prop == 'children') {\n// //         if(typeof props.children=='string'){\n// //           const txtNode=document.createTextNode(props.children);\n// //           ele.appendChild(txtNode);\n// //           break;\n// //         }\n// //         //将第一层节点对象的子元素添加进去\n// //         props.children.forEach(child=>{\n// //           if(typeof child == 'string'){\n// //             const txtNode = document.createTextNode(props.child);\n// //             ele.appendChild(txtNode);\n// //           }else{\n// //             ReactDOM.render(child,ele);\n// //           }\n// //         })\n// //       }else{\n// //         ele[prop]=props[prop];\n// //       }\n// //     }\n// //     //将第一层DOM节点添加到container中\n// //     container.appendChild(ele);\n// //   }\n// // }\n// ReactDOM.render(\n//   <Home/>,\n//   // ele, //渲染的元素\n//   document.getElementById('root') //渲染到哪个位置\n// );\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import Home from './pages/Home';\n// import Control from './components/Conrtrol';\n// import Demo01 from './pages/Demo01';\n// import App from './pages/App';\n// import Hoc,{Detail} from './pages/Hoc'\n// import Hook from './pages/Hook'\n// import Context from './pages/Context'\n\n// ReactDOM.render(\n//   // <div><Hoc/><Detail/></div>,\n//   <div>\n//     <Context.Provider value='123'>\n//       <Hook />\n//     </Context.Provider>\n//   </div>,\n  \n//   document.getElementById('root')\n// );\n// ReactDOM.render(\n//     <Home/>,\n//     document.getElementById('root')\n// );\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoList from './pages/TodoList';\n\n\n \nReactDOM.render(\n    <div>\n        <TodoList />\n    </div>,\n    document.getElementById('root')\n)"],"sourceRoot":""}